stages:
  - build
  - release

variables:
  BINARY_NAME: agent
  PACKAGE_NAME: "agent"
  GIT_STRATEGY: fetch

build:
  image: golang:1.23
  stage: build
  tags:
    - docker
  parallel:
    matrix:
      - GOOS: "linux"
        GOARCH: "amd64"
        EXT: ""
      - GOOS: "windows"
        GOARCH: "amd64"
        EXT: ".exe"
  script:
    - export GOOS=$GOOS
    - export GOARCH=$GOARCH
    - mkdir -p build
    - echo "Building for $GOOS/$GOARCH"
    - CGO_ENABLED=0 GOOS=$GOOS GOARCH=$GOARCH go build -ldflags "-s -w" -o build/${BINARY_NAME}_${GOOS}_${GOARCH}${EXT} main.go
    - ls -la build/
  artifacts:
    paths:
      - build/
    expire_in: 1d
  only:
    - tags

release:
  stage: release
  tags:
    - docker
  only:
    - tags
  script:
    - apk add --no-cache jq git
    - mkdir -p tmp
    - echo "" > tmp/links.txt

    - |
      for file in build/*; do
        FILENAME=$(basename "$file")

        curl --fail --header "PRIVATE-TOKEN: $GITLAB_TOKEN" \
          --upload-file "$file" \
          "$CI_API_V4_URL/projects/$CI_PROJECT_ID/packages/generic/$PACKAGE_NAME/$CI_COMMIT_TAG/$FILENAME"
      done

    - |
      PACKAGE_ID=$(curl --silent --header "PRIVATE-TOKEN: $GITLAB_TOKEN" \
        "$CI_API_V4_URL/projects/$CI_PROJECT_ID/packages" | \
        jq -r '[.[] | select(.version=="'$CI_COMMIT_TAG'" and .name=="'$PACKAGE_NAME'")][0].id')

      FILES=$(curl --silent --header "PRIVATE-TOKEN: $GITLAB_TOKEN" \
        "$CI_API_V4_URL/projects/$CI_PROJECT_ID/packages/$PACKAGE_ID/package_files")

      echo "$FILES" | jq -r '.[] | "\(.file_name)|'"$CI_PROJECT_URL"'/-/package_files/\(.id)/download"' >> tmp/links.txt
    
    - |
      curl --fail --request POST \
        --header "PRIVATE-TOKEN: $GITLAB_TOKEN" \
        --header "Content-Type: application/json" \
        --data '{
          "name": "'$CI_COMMIT_TAG'",
          "tag_name": "'$CI_COMMIT_TAG'",
          "description": "Release '$CI_COMMIT_TAG'"
        }' \
        "$CI_API_V4_URL/projects/$CI_PROJECT_ID/releases"
    
    - |
      while IFS="|" read -r NAME URL; do
        [ -z "$NAME" ] && continue
        curl --fail --request POST \
          --header "PRIVATE-TOKEN: $GITLAB_TOKEN" \
          --form "name=$NAME" \
          --form "url=$URL" \
          "$CI_API_V4_URL/projects/$CI_PROJECT_ID/releases/$CI_COMMIT_TAG/assets/links"
      done < tmp/links.txt