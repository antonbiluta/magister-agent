stages:
  - build
  - release

variables:
  BINARY_NAME: agent
  GIT_STRATEGY: fetch

build:
  image: golang:1.23
  stage: build
  tags:
    - docker
  parallel:
    matrix:
      - GOOS: "linux"
        GOARCH: "amd64"
      - GOOS: "windows"
        GOARCH: "amd64"
  script:
    - mkdir -p build
    - echo "Building for $GOOS/$GOARCH"
    - CGO_ENABLED=0 GOOS=$GOOS GOARCH=$GOARCH go build -ldflags "-s -w" -o build/${BINARY_NAME}_$GOOS_$GOARCH main.go
    - ls -la build/
  artifacts:
    paths:
      - build/
    expire_in: 1d
  only:
    - branches
    - tags

release:
  stage: release
  tags:
    - docker
  only:
    - tags
  script:
    - echo "Creating GitLab Release for tag $CI_COMMIT_TAG"
    - |
      curl --silent --show-error --fail \
        --request POST \
        --header "PRIVATE-TOKEN: $GITLAB_TOKEN" \
        --header "Content-Type: application/json" \
        --data '{
          "name": "'$CI_COMMIT_TAG'",
          "tag_name": "'$CI_COMMIT_TAG'",
          "description": "Release '$CI_COMMIT_TAG'"
        }' \
        "$CI_API_V4_URL/projects/$CI_PROJECT_ID/releases"
    - |
      for file in build/*; do
        curl --silent --show-error --fail \
          --request POST \
          --header "PRIVATE-TOKEN: $GITLAB_TOKEN" \
          --form "name=$(basename $file)" \
          --form "url=$CI_PROJECT_URL/-/jobs/$CI_JOB_ID/artifacts/raw/build/$(basename $file)" \
          "$CI_API_V4_URL/projects/$CI_PROJECT_ID/releases/$CI_COMMIT_TAG/assets/links"
      done