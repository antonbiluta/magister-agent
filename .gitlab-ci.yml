stages:
  - build
  - release

variables:
  BINARY_NAME: agent
  PACKAGE_NAME: "agent"
  ARGS_FILE: "tmp/args.sh"
  GIT_STRATEGY: fetch

build:
  image: golang:1.23
  stage: build
  tags:
    - docker
  parallel:
    matrix:
      - GOOS: "linux"
        GOARCH: "amd64"
      - GOOS: "windows"
        GOARCH: "amd64"
  script:
    - export GOOS=$GOOS
    - export GOARCH=$GOARCH
    - mkdir -p build
    - echo "Building for $GOOS/$GOARCH"
    - CGO_ENABLED=0 GOOS=$GOOS GOARCH=$GOARCH go build -ldflags "-s -w" -o build/${BINARY_NAME}_${GOOS}_${GOARCH} main.go
    - ls -la build/
  artifacts:
    paths:
      - build/
    expire_in: 1d
  only:
    - branches
    - tags

upload:
  stage: release
  tags:
    - docker
  only:
    - tags
  script:
    - apk add --no-cache jq git
    - mkdir -p tmp

    - |
      TAG_LIST=$(git rev-list --tags --skip=1 --max-count=1 2>/dev/null || true)
      if [ -n "$TAG_LIST" ]; then
        PREV_TAG=$(git describe --tags --abbrev=0 "$TAG_LIST")
      else
        PREV_TAG=""
      fi
      
      if [ -n "$PREV_TAG" ]; then
        git log "$PREV_TAG"..HEAD --pretty=format:"- %s" > "$CHANGELOG_FILE"
      else
        git log --pretty=format:"- %s" > "$CHANGELOG_FILE"
      fi
    
    - DESCRIPTION_ESCAPED=$(sed ':a;N;$!ba;s/\n/\\n/g' "$CHANGELOG_FILE")

    - echo "ARGS=(--tag-name \"$CI_COMMIT_TAG\" --name \"$CI_COMMIT_TAG\" --description \"$DESCRIPTION_ESCAPED\")" > "$ARGS_FILE"

    - |
      for file in build/*; do
        FILENAME=$(basename "$file")
        FILE_URL="$CI_PROJECT_URL/-/packages/generic/$PACKAGE_NAME/$CI_COMMIT_TAG/$FILENAME"

        curl --fail --header "PRIVATE-TOKEN: $GITLAB_TOKEN" \
          --upload-file "$file" \
          "$CI_API_V4_URL/projects/$CI_PROJECT_ID/packages/generic/$PACKAGE_NAME/$CI_COMMIT_TAG/$FILENAME"

        echo "ARGS+=(--assets-link '{\"name\":\"$FILENAME\",\"url\":\"$FILE_URL\"}')" >> "$ARGS_FILE"
      done
  artifacts:
    paths:
      - tmp/args.sh
    expire_in: 1h

release:
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  stage: release
  tags:
    - docker
  only:
    - tags
  dependencies:
    - upload
  script:
    - . tmp/args.sh
    - release-cli create "${ARGS[@]}"