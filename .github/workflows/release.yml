name: Build and Release

on:
  push:
    tags:
      - 'v*'


jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows]
        goarch: [amd64]
    env:
      BINARY_NAME: agent
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Build
        run: |
          mkdir -p build
          EXT=""
          if [ "${{ matrix.goos }}" == "windows" ]; then EXT=".exe"; fi
          CGO_ENABLED=0 GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} \
            go build -ldflags="-s -w" \
            -o build/${BINARY_NAME}_${{ matrix.goos }}_${{ matrix.goarch }}${EXT} main.go

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: agent-${{ matrix.goos }}-${{ matrix.goarch }}
          path: build/*

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}